03.13

create table `member` (
`no` int,
`name` varchar(20),
`position` varchar(30),
`year` int
);

create table `basicsalary` (
`position` varchar(20),
`salary` int
);

alter table `basicsalary` change column `position` `position` varchar(30);

alter table `member` change column `name` `name` varchar(40);


create table `news` (
`no` int,
`title` varchar(50),
`desc` longtext
);

alter table `news` change column `title` `title` varchar(100);



insert into `news` (`no`, `title`, `desc`)
values
(1, "아이폰 x 출시", "아이폰 x가 새롭게 출시되었습니다"),
(2, "갤럭시 S9 출시", "갤럭시 S9이 새롭게 출시되었습니다"),
(3, "휘어지는 고감도 투명 터치센서", "휘어지는 고감도 투명 터치센서가 출시되었습니다.");



insert into `member` (`no`, `name`, `position`, `year`)
values
(1001, "이철수", "사원", 2),
(1002, "홍길동", "과장", 7),
(1003, "김영희", "대리", 5),
(1004, "손흥민", "차장", 10),
(1005, "박지성", "사원", 1),
(1006, "이천수", "대리", 4),
(1007, "안정환", "사장", 15),
(1008, "박항서", "부장", 13),
(1009, "지소연", "과장", 8),
(1010, "차범근", "사원", 2);

insert into `basicsalary` (`position`, `salary`)
values
("사장", 12000),
("부장", 9000),
("차장", 8000),
("과장", 7000),
("대리", 5500),
("사원", 4500);


03.20

insert into news
(`no`, `title`, `desc`)
values
(5,'G20 재무회의', '규제에 대한 별 내용 없음')

select * from news

select `no`, `title`
from news
where `no` = 1
and `title` = '아이폰 X 출시'


/* select 컬럼명 */
/*   from 테이블명 */
/*  where 조건 */


/* --------------------주석---------------------------- */

/* 연습문제 */
/* 1. member 테이블에서 모든 데이터 조회 */
select * from member
;
/* 2. basicsalary 테이블에서 모든 데이터 조회 */
select * from basicsalary
;
/* 3. 번호가 1004인 사람을 member 테이블에서 조회 */
select * from member
where no = 1004
;
/* 4. 과장, 차장의 salary를 basicsalary에서 조회 */
select * from basicsalary
where position = '과장'
or position = '차장'
;
/* 5. position이 사원인 인원을 member 테이블에서 조회 */
select * from member
where position = '사원'
;
/* 6. 연차가 10년 이상인 인원을 member 테이블에서 조회 */
select * from member
where year >= 10
;
/* 7. salary가 5000 미만인 직급을 basicsalary 테이블에서 조회 */
select * from basicsalary
where `salary` < 5000
;
/* 8. 연차가 10년 미만이고 직급이 대리인 인원을 member 테이블에서 조회 */
select * from member
where year < 10
and position = '대리'
;

/* ------------------------------------------------ */


select now()
;
select count(*) '사원수' from member
where position = '사원'
;
오름차순
select * from member
order by no
;
내림차순 = desc
select * from member
order by no desc
;
select * from member
order by year desc, no
;

/* ------------------------------------------------ */

/* 연습문제 */
/* 1. member 테이블에서 사원인 인원 수 */
select count(*) '인원수' from member
where position = '사원'
;
/* 2. member 테이블에서 과장인 인원 수 */
select count(*) '인원수' from member
where position = '과장'
;
/* 3. member 테이블에서 연차가 5년 이상인 인원 수 */
select count(*) '인원수' from member
where year >= 5
;
/* 4. member 테이블에서 번호가 1005 미만인 인원 수 */
select count(*) '인원수' from member
where no < 1005
;
/* 5. basicsalary 테이블에서 직급 전체 수 */
select count(position) '직급전체수' from basicsalary
;
select count(distinct(position)) '직급 전체 수' from basicsalary
;
/* distinct = 중복값 제거 후 계산 */

/* ------------------------------------------------ */

alter table `news` add column `category` varchar(50)
;

update news
set category = 'IT'
where no = 1    /* where절 없으면 범위가 전체---> 조심해야함(delete면 전부 삭제;) */
;

update news
set title = '아이폰 X 신규 출시'
where no = 1
;

/* ------------------------------------------------ */

/* 연습문제 */
/* 1. member 테이블의 각 인원의 연차를 1년씩 증가 */
update member
set year = year + 1
;
/* 2. member 테이블의 이천수 -> 이만수로 개명 */
update member
set name = '이만수'
where name = '이천수'
;
/* 3. member 테이블의 이철수, 차범근 대리로 승진 */
update member
set position = '대리'
where name = '이철수'
or name = '차범근'
;
/* 4. member 테이블의 지소연 차장으로 승진 */
update member
set position = '차장'
where name = '지소연'
;
/* 5. basicsalary 테이블의 부장, 차장 기본급 1500 상승 */
update basicsalary
set salary = salary + 1500
where position = '부장'
or position = '차장'
;
/* 6. basicsalary 테이블의 과장, 대리, 사원 기본급 1000 상승 */
update basicsalary
set salary = salary + 1000
where position = '과장'
or position = '대리'
or position = '사원'
;
/* 7. basicsalary 테이블의 직급을 사원 -> 주임으로 변경 */
update basicsalary
set position = '주임'
where position = '사원'
;

03.27

create
alter
drop

insert into 테이블명(컬럼1,컬럼2,....)
values
(컬럼1 값, 컬럼2 값,...),
(컬럼1 값, 컬럼2 값,...),
(컬럼1 값, 컬럼2 값,...);

select `no`, `title`, `desc`, `category` from news
where no = 2
or title = '아이폰 X 출시'
or title like '%아이폰%' ;

update news set title='갤럭시S10출시'
where no = 2;

delete from news
where no = 10;

delete from member
where name = '이철수'
or name = '김영희'
or name = '이만수' ;

create table `member` (
`no` int,
`id` varchar(20),
`name` varchar(30),
`pass` varchar(20),
`email` varchar(30),
`authcode` int,
`regDate` timestamp,
`lastConnectTime` timestamp
);

create table `board` (
`no` int,
`id` varchar(20),
`title` varchar(50),
`content` longtext,
`regDate` timestamp,
`lastUpdate` timestamp
);

create table `auth` (
`authcode` int,
`authority` varchar(20)
);

rename table member2 to member3;

select * from news as a
where a.no = 1;

select now();
select sum(salary) from basicsalary;
select sum(salary) '연봉총합' from basicsalary;
select avg(salary) '연봉평균' from basicsalary;
select concat(name, ' : ' , position) as '이름:직급' from member3;
select * from member3 limit 3;
select left(name,1) from member3;
select left(name,1) as '성' , right(name,2) as '이름' from member3;
select substring(name, 2, 1) from member3;

insert into member (no, id, name, pass, email, authcode, regDate, lastConnectTime)
values
(1, 'abc111','김태희','qlalfqjsgh123','abc111@naver.com',0,now(),now()) ,
(2, 'helloworld','김코딩','**12341234','helloworld@gamil.com',1,now(),now()),
(3, 'gildong','홍길동','98769876aaa','gildong@daum.net',1,now(),now()),
(4, 'chaboom','차범근','awsdjlfksd123','chaboom2nate.com',2,now(),now()),
(5, 'polytech','한가인','gjgkqwl111','polytech@polytech.ac.kr',2,now(),now()),
(6, 'smart','정우성','00asdlkfj00','smart@seoul.kr',2,now(),now()),
(7, 'hwang1234','조인성','mbslkjfl2018','hwang1234@naver.com',2,now(),now()),
(8, 'qwerasdf','손예진','qgqhlq888','qwerasdf@hanmail.net',3,now(),now()),
(9, 'korea0808','최민식','1234qwerasdf','korea0808@yahoo.co.kr',3,now(),now()),
(10, 'goodid','송강호','aa12345678','goodid@gmail.com',3,now(),now());


insert into board
values
(1, 'abc111','공지사항','공지사항입니다.',now(),now()),
(2, 'helloworld','안녕하세요','잘부탁드립니다.',now(),now()),
(3, 'chaboom','test','게시판 test',now(),now()),
(4, 'smart','가입인사','가입인사드립니다.',now(),now()),
(5, 'hwang1234','hello world','hello mysql',now(),now()),
(6, 'korea0808','ㅎㅎㅎ','ㅋㅋㅋㅋ',now(),now());


insert into auth
values
(0, '관리자'),
(1, '운영자'),
(2, '회원'),
(3, '예비회원');


select * from member
where no < 5;

select * from member
where authcode = 3;

select * from member
where no < 7
and authcode = 1;

select * from board
where id = 'chaboom';

select * from board
where no <= 3;

select * from auth
where authority = '회원';






04.03


select * from member order by authcode desc, name desc;

select count(*) from member where authcode = 3;

select * from basicsalary;

select sum(salary) from basicsalary;

select * from member;

select concat(id, " : ", name) from member;

select left(name,2) from member;


/* 7. board 테이블에서 모든 글을 번호 오름차순으로 선택 */
select * from board order by no;

/* 8. board 테이블에서 모든 글을 번호 내림차순으로 선택 */
select * from board order by no desc;

/* 9. board 테이블에서 모든 글을 번호 오름차순, 작성일시 내림차순으로 선택  */
select * from board order by no, regDate desc;

/* 10. board 테이블에서 모든 글을 번호 내림차순, 작성일시 오름차순으로 선택 */
select * from board order by no desc, regDate;

/* 11. member 테이블에서 authcode가 2, 3인 사람의 수 */
select count(*) from member where authcode = 2 || authcode = 3;
/* || = or */

/* 12. member 테이블에서 no가 1이상 7미만인 사람 중 authcode가 2인 사람의 수 */
select count(*) from member where no>=1 && no<7 && authcode = 2;
/* && = and */

/* 13. member 테이블에서 성만 가져오기 */
select left(name,1) from member;

/* 14. board 테이블에서 '제목 : 내용'을 '본문'이라는 컬럼명으로 가져오기 */
select concat(title, " : ", content) '본문' from board;
/* 칼럼명 = as '' (as 생략가능) */

/* 15. member 테이블에서 이름만 가져오기 */
select right(name, 2) from member;


update 테이블명
set 칼럼명 = 변경 값
where 칼럼명 = 기존 값

/* 1. member 테이블에서 김태희 이름을 김태리로 이름 변경 */
update member
set name = '김태리'
where name = '김태희';

/* 2. member 테이블에서 조인성 email을 insung@naver.com으로 변경 */
update member
set email = 'insung@naver.com'
where name = '조인성';

/* 3. member 테이블에서 손예진, 최민식, authcode를 2로 변경 */
update member
set authcode = 2
where name = '손예진'
or name = '최민식';

/* 4. board 테이블에서 5번 글의 내용을 hello mariadb로 변경 */
update board
set content = 'hello mariadb'
where no = 5;

/* 5. auth 테이블에서 authority 컬럼값의 예비회원을 승인대기로 변경 */
update auth
set authority = '승인대기'
where authority = '예비회원';



/* start transaction 수정, 변경 -> 확정=commit , 복구=rollback */
start transaction
delete from member
commit
rollback
/* commit을 하고나면  rollback을 해도 복구 안됨 */


2 * (1+2);
select max(salary) from basicsalary;
select * from basicsalary;

select position from basicsalary
where salary = (select max(salary) from basicsalary);

/* position in = position 여러개 */
select * from member3
where position in ('사원','과장','부장')

where position = '사원'
or position = '과장' ;


select * from member3;
select * from basicsalary where salary >= 7000;

select * from member3 where position in(select position from basicsalary where salary >= 7000);


04.10

CREATE
ALTER
DROP
;

insert
select
update
delete
;

select * from basicsalary;

select * from basicsalary
where salary = (select max(salary) from basicsalary);

select max(salary) from basicsalary;


/* 1. 회원 중 비밀번호가 가장 긴 회원의 목록 */
select * from member
where 1=1
and length(pass) = (select max(length(pass)) from member);

/* 2. 회원 권한이 '회원'인 목록 */
select * from member
where 1=1
and authcode = (select authcode from auth where authority = '회원');

/*1+2*/
select * from member
where 1=1
and length(pass) = (select max(length(pass)) from member)
and authcode = (select authcode from auth where authority = '회원');

/* 3. 글을 쓴적이 있는 회원의 아이디 목록*/
select id from member
where 1=1
and id in (select id from board where content is not null);


[app.js] - atom


var express = require('express');
var mysql = require('mysql');
var http = require('http');
var app = express();

var connection = mysql.createConnection({
  host: 'localhost'
  , port: 3306
  , user: 'root'
  , password: 'root'
  , database: 'test'
});

var server = http.createServer(app).listen(800);
connection.connect();
console.log("hello nodejs");

app.get('/test', function (req, res) {
  res.send('hello 이한민');
});

connection.query('select * from member',
  function (err, rows, fields) {
    if (err) throw err;
    console.log(rows);
  }
);

app.get('/cssPractice', function (req, res) {
  res.sendfile('css실습.html');
});

app.get('/getAllMember', function (req, res) {
  connection.query('select * from member',
    function (err, rows, fields) {
      if (err) throw err;
      res.send(rows);
    }
  );
});

// authcode가 1이거나 2인사람
app.get('/getAuthcode1or2', function (req, res) {
  connection.query('select * from member where authcode = 1 or authcode = 2',
    function (err, rows, fields) {
      if (err) throw err;
      res.send(rows);
    }
  );
});

// 글을 쓴 적이 있는 사람의 이름 목록
app.get('/getNameFromBoard', function (req, res) {
  connection.query('select name from member where id in (select id from board)',
    function (err, rows, fields) {
      if (err) throw err;
      res.send(rows);
    }
  );
});

// 권한이 '관리자'인 사람의 이메일 주소만 ( 0이라는 코드를 쓰면 안됨)
app.get('/getEmailOfAdmin', function (req, res) {
  connection.query('select email from member where authcode = ' +
  '(select authcode from auth where authority = "관리자")',
    function (err, rows, fields) {
      if (err) throw err;
      res.send(rows);
    }
  );
});

// 이메일 주소가 가장 긴 사람
app.get('/getLongestEmail', function (req, res) {
  connection.query('select * from member where length(email) = ' +
  '(select max(length(email)) from member)',
    function (err, rows, fields) {
      if (err) throw err;
      res.send(rows);
    }
  );
});




04.17

CREATE
ALTER
DROP

insert
select
update
delete

select * from member where authcode = 1 or authcode = 2
;
select name from member where id in (select id from board)
;
select email from member where authcode = (select authcode from auth where authority = "관리자")
;
select * from member where length(email) = (select max(length(email)) from member)
;

05.02

select * from flight a, aircraft b
where a.aircraftCode = b.aircraftCode
and a.flightName = 'OZ800';

/* 1. 관리자인 회원의 id, name만 출력하세요(0이라는 코드를 쓰면 안됨) */
select a.id, a.name from member a, auth b
where a.authcode = b.authcode
and b.authority = '관리자';

/* 2. 글제목, 회원이름 두가지만 선택하세요 */
select a.title, b.name from board a, member b
where a.id = b.id;

/* 3. 권한이 '회원' 회원이름, 회원id, 제목, 내용, 권한만 출력하세요(2라는 코드를 쓰면 안됨) */
select a.name, a.id, c.title, c.content, b.authority from member a, auth b, board c
where a.authcode = b.authcode
and a.id = c.id
and b.authority = '회원';




05.08

/* left join */
select *
from flight a
left join aircraft b
on a.aircraftCode = b.aircraftCode;

/* member 테이블 마지막 행 authcode 10으로 변경 */
/* board 테이블 마지막 행 id 삭제 */
/* 1.  회원이름, 권한 출력(회원전체) */
select a.name, b.authority
from member a
left join auth b
on a.authcode = b.authcode;

/* 2. 제목, 작성자이름 출력(글 전체) */
select a.title, b.name
from board a
left join member b
on a.id = b.id;



